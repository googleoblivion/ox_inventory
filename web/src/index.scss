$mainColor: #22232c;
$textColor: #c1c2c5;
$mainFont: Roboto;

$secondaryColor: rgba(12, 12, 12, 0.4);
$secondaryColorHighlight: #33343F;
$secondaryColorLight: rgba(0, 0, 0, 0.5);
$secondaryColorDark: rgba(12, 12, 12, 0.8);

$gridCols: 6;
$gridRows: 7;
$gridSize: 10vh;
$gridGap: 0.5rem;
$containerSize: calc(#{$gridRows} * #{calc($gridSize + 0.22vh)} + #{$gridRows} * #{$gridGap});

body {
  margin: 0;
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans',
    'Droid Sans', 'Helvetica Neue', sans-serif;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  height: 100vh;
  background: none !important;
  overflow: hidden !important;
  user-select: none;
}

#root {
  height: 100%;
}

code {
  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New', monospace;
}

::-webkit-scrollbar {
  display: none;
}

p {
  margin: 0;
  padding: 0;
  font-family: $mainFont;
}

input[type='number']::-webkit-inner-spin-button,
input[type='number']::-webkit-outer-spin-button {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}

.app-wrapper {
  height: 100%;
  width: 100%;
  color: white;
}

.context-menu-list {
  min-width: 200px;
  background-color: $mainColor;
  color: $textColor;
  padding: 4px;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: inset;
  border-width: 1px;
  border-radius: 4px;
  outline: none;
  display: flex;
  flex-direction: column;
}

.context-menu-item {
  padding: 8px;
  border-radius: 4px;
  background-color: transparent;
  outline: none;
  border: none;
  color: $textColor;
  display: flex;
  justify-content: space-between;
  align-items: center;

  &:active {
    transform: none;
  }

  &:hover {
    background-color: $secondaryColorHighlight;
    cursor: pointer;
  }
}

.tooltip-description {
  padding-top: 5px;
}

.tooltip-markdown>p {
  margin: 0;
}

button:active {
  transform: translateY(3px);
}

.item-drag-preview {
  width: 7.7vh;
  height: 7.7vh;
  z-index: 1;
  position: fixed;
  pointer-events: none;
  top: 0;
  left: 0;
  background-repeat: no-repeat;
  background-position: center;
  background-size: calc($gridSize / 1.25);
  image-rendering: -webkit-optimize-contrast;
}

.inventory-wrapper {
  display: flex;
  flex-direction: row;
  align-items: center;
  height: 100%;
  gap: calc($gridGap);
  justify-content: space-around;
  background-color: rgba($color: $mainColor, $alpha: 0.75);
}

.inventory-control {
  display: flex;

  .inventory-control-wrapper {
    display: flex;
    flex-direction: row;
    // grid-template-columns: repeat(5, $gridSize * 1.25);
    // grid-auto-rows: calc($gridSize + 0.22vh);
    // width: 100%;
    height: fit-content;
    align-content: space-between;
    justify-content: space-between;
    align-items: center;
    padding: 0.5rem;
    // border-radius: 0.65rem;
  }

  .inventory-control-input {
    transition: 200ms;
    // padding: 23px 8px;
    // padding: 1rem 0rem;
    // height: 53.5%;
    // border: 1px solid black;
    // border-radius: 2.5%;
    font-family: $mainFont;
    font-size: 16px;
    text-align: center;
    outline: none;
    border: none;
    color: #ffffff;
    background-color: rgba($color: $mainColor, $alpha: 0.3);

    &:focus-within {
      background-color: $secondaryColorDark;
    }

    &:hover {
      background-color: $secondaryColorDark;
    }
  }

  .inventory-control-button {
    @extend .inventory-slot;
    font-size: 20px;
    color: #fff;
    background-color: #22232c00;
    transition: 200ms;
    padding: 1rem;
    height: 53.5%;
    border-radius: 2.5%;
    border: 1px solid black;
    text-transform: uppercase;
    font-family: $mainFont;
    width: 100%;
    font-weight: 500;

    &:hover {
      scale: 0.9;
      background-color: $secondaryColorDark;
    }
  }
}

.useful-controls-dialog {
  background-color: $mainColor;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  color: $textColor;
  width: 450px;
  display: flex;
  flex-direction: column;
  padding: 16px;
  border-radius: 4px;
  gap: 16px;
}

.useful-controls-dialog-overlay {
  background-color: rgba(0, 0, 0, 0.5);
}

.useful-controls-dialog-title {
  display: flex;
  width: 100%;
  justify-content: space-between;
  align-items: center;
  font-size: 18px;
}

.useful-controls-dialog-close {
  width: 25px;
  height: 25px;
  padding: 6px;
  display: flex;
  justify-content: center;
  align-items: center;
  border-radius: 4px;
  fill: $textColor;

  &:hover {
    background-color: $secondaryColorHighlight;
    cursor: pointer;
  }
}

.useful-controls-content-wrapper {
  display: flex;
  flex-direction: column;
  gap: 20px;
}

.divider {
  width: 100%;
  height: 1px;
  background-color: rgba(255, 255, 255, 0.12);
}

.useful-controls-button {
  position: absolute !important;
  bottom: 25px;
  right: 25px;
  transition: 200ms !important;
  border: none;
  color: white;
  width: 52px;
  height: 52px;
  display: flex;
  justify-content: center;
  align-items: center;
  fill: white;
  border-radius: 5% !important;
  background-color: $secondaryColor !important;

  &:hover {
    background-color: $secondaryColorDark !important;
    cursor: pointer;
  }
}

.useful-controls-exit-button {
  position: absolute !important;
  right: 8px;
  top: 8px;
  border-radius: 2.5% !important;
  color: grey !important;
}

// Dialog is used fro useful controls window


// inventory grids
.inventory-grid-wrapper {
  display: flex;
  flex-direction: column;
  height: calc($containerSize * 1.2);
  // height: fit-content;
  justify-content: flex-end;
  border-radius: 2.5%;
  // background-color: rgba($color: $mainColor, $alpha: 0.9);
  padding: 1rem;
  gap: 1rem;
}

.inventory-grid-header-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;

  p {
    font-size: 16px;
  }
}

.inventory-left-wrapper {
  display: flex;
  flex-direction: column;
  gap: $gridGap;
}

.inventory-left-container {
  display: flex;
  flex-direction: row;
  gap: calc($gridGap * 5);

  .inventory-left-hotbar {
    display: grid;
    // height: $containerSize;
    grid-template-columns: repeat(1, $gridSize);
    grid-auto-rows: calc($gridSize + 0.22vh);
    gap: $gridGap;
    overflow: none;

    .inventory-slot {
      @extend .inventory-slot;
    }
  }
}

.inventory-grid-container {
  display: grid;
  height: $containerSize;
  grid-template-columns: repeat($gridCols, $gridSize);
  grid-auto-rows: calc($gridSize + 0.22vh);
  gap: $gridGap;
  overflow-y: scroll;
}

// inventory slots
.inventory-slot {
  transition: scale 300ms ease, border-radius 600ms ease, box-shadow 200ms ease-out;
  background-color: $secondaryColor;
  background-repeat: no-repeat;
  background-position: center;
  image-rendering: -webkit-optimize-contrast;
  position: relative;
  background-size: calc($gridSize / 1.5);
  color: $textColor;
  border-color: rgba(0, 0, 0, 0.9);
  border-style: inset;
  border-width: 1px;

  &:hover {
    box-shadow: 2px 2px 1px black;
    scale: 0.9;
    border-radius: 5% 10%;
  }
}

.inventory-slot-label-box {
  background-color: $secondaryColorDark;
  color: $textColor;
  text-align: center;
  border-bottom-left-radius: 0.25vh;
  border-bottom-right-radius: 0.25vh;
  border-top-color: cyan;
  border-top-style: inset;
  border-top-width: 1px;
}

.inventory-slot-label-text {
  text-transform: uppercase;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
  // padding: 2px 3px;
  font-weight: 500;
  font-family: $mainFont;
  font-size: calc($gridSize / 10);
}

.inventory-slot-number {
  background-color: white;
  color: black;
  height: 12px;
  border-top-left-radius: 0.25vh;
  border-bottom-right-radius: 0.25vh;
  padding: 3px;
  font-size: 12px;
  font-weight: 900;
  font-family: $mainFont;
}

.item-slot-wrapper {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  height: 100%;

  p {
    font-size: 12px;
  }
}

.item-slot-header-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: flex;
}

.item-hotslot-header-wrapper {
  @extend .item-slot-header-wrapper;
  justify-content: space-between !important;
}

.item-slot-info-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  text-shadow: 1px 1px 5px black;
  width: 100%;
  padding: 3px;
  gap: 3px;

  p {
    font-size: 12px;
  }
}

.item-slot-currency-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  align-items: center;
  padding-right: 3px;

  p {
    font-size: 14px;
    text-shadow: 0.1vh 0.1vh 0 rgba(0, 0, 0, 0.7);
  }
}

.item-slot-price-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: flex-end;
  padding-right: 3px;

  p {
    font-size: 14px;
    text-shadow: 0.1vh 0.1vh 0 rgba(0, 0, 0, 0.7);
  }
}


.tooltip-wrapper {
  pointer-events: none;
  display: flex;
  background-color: $mainColor;
  width: 200px;
  padding: 8px;
  flex-direction: column;
  min-width: 200px;
  color: $textColor;
  font-family: $mainFont;
  border-radius: 4px;
  border-color: rgba(0, 0, 0, 0.2);
  border-style: inset;
  border-width: 1px;

  p {
    font-size: 12px;
    font-weight: 400;
  }
}

.tooltip-header-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;

  p {
    font-size: 15px;
    font-weight: 400;
  }
}

.tooltip-crafting-duration {
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;

  svg {
    padding-right: 3px;
  }

  p {
    font-size: 14px;
  }
}

.tooltip-ingredients {
  padding-top: 5px;
}

.tooltip-ingredient {
  display: flex;
  flex-direction: row;
  align-items: center;

  img {
    width: 28px;
    height: 28px;
    padding-right: 5px;
  }
}

// hotbar
.hotbar-container {
  display: flex;
  align-items: center;
  gap: 2px;
  justify-content: center;
  width: 100%;
  position: absolute;
  bottom: 2vh;
}

.hotbar-item-slot {
  @extend .inventory-slot;
  width: $gridSize;
  height: $gridSize;
}

.hotbar-slot-header-wrapper {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
}

// item notifications

.item-notification-container {
  display: flex;
  overflow-x: scroll;
  flex-wrap: nowrap;
  gap: 2px;
  position: absolute;
  bottom: 20vh;
  left: 50%;
  width: 100%;
  margin-left: calc(50% - calc($gridSize/2));
  transform: translate(-50%);
}

.item-notification-action-box {
  width: 100%;
  color: $textColor;
  background-color: $secondaryColor;
  text-transform: uppercase;
  text-align: center;
  border-top-left-radius: 0.25vh;
  border-top-right-radius: 0.25vh;
  font-family: $mainFont;

  p {
    font-size: 11px;
    padding: 2px;
    font-weight: 600;
  }
}

.item-notification-item-box {
  @extend .inventory-slot;
  height: $gridSize;
  width: $gridSize;
}

.durability-bar {
  background: rgba($color: $mainColor, $alpha: 0);
  height: 0.225vh !important;
  bottom: 0px;
  left: 0px;
  width: 100%;
  position: absolute;
  overflow: hidden;
}

.weight-bar {
  background: rgba($color: $mainColor, $alpha: 0.5);
  border: 1px inset rgba($color: $secondaryColorDark, $alpha: 0.5);
  height: 1vh;
  border-radius: 2rem;
  overflow: hidden;
}

.transition-fade-enter {
  opacity: 0;
}

.transition-fade-enter-active {
  opacity: 1;
  transition: opacity 200ms;
}

.transition-fade-exit {
  opacity: 1;
}

.transition-fade-exit-active {
  opacity: 0;
  transition: opacity 200ms;
}

.transition-slide-up-enter {
  transform: translateY(200px)
}

.transition-slide-up-enter-active {
  transform: translateY(0px);
  transition: all 200ms;
}

.transition-slide-up-exit {
  transform: translateY(0px);
}

.transition-slide-up-exit-active {
  transform: translateY(200px);
  transition: all 200ms;
}

.slideUp {
  animation: slideUp 0.5s forwards;
}

.slideDown {
  animation: slideDown 0.5s forwards;
}

@keyframes slideUp {
  from {
    transform: translateY(100%);
    opacity: 0;
  }

  to {
    transform: translateY(0);
    opacity: 1;
  }
}

@keyframes slideDown {
  from {
    transform: translateY(0);
    opacity: 1;
  }

  to {
    transform: translateY(100%);
    opacity: 0;
  }
}

.item-notification-container {
  position: fixed;
  bottom: 20px;
  left: 50%;
  /* Center horizontally */
  transform: translateX(-50%);
  /* Adjust to center it exactly */
  display: flex;
  flex-direction: column-reverse;
  /* Newest notification at the bottom */
  align-items: center;
  /* Center the notifications horizontally */
  gap: 10px;
  /* Space between notifications */
  z-index: 1000;
  /* Ensure it stays on top of other elements */
}

.item-notification-text-box {
  background-color: rgba(0, 0, 0, 0.75);
  color: white;
  padding: 10px 20px;
  border-radius: 5px;
  font-size: 16px;
  font-family: Arial, sans-serif;
}

.modal-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0);
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
}

.modal-container {
  background-color: rgba($color: $secondaryColorDark, $alpha: 0.75);
  padding: 50px;
  border-radius: 10%;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  text-align: center;
  width: fit-content;
  position: absolute;
  color: white;
}

.modal-overlay label {
  font-family: $mainFont;
  font-size: 1em;
}

.modal-buttons {
  margin-top: 40px;
  gap: 1rem;
  display: flex;
  justify-content: space-between;
}

.modal-overlay button {
  padding: 20px 60px;
  cursor: pointer;
  border: none;
  box-shadow: 2px 2px 5px black;
}

.modal-overlay input {
  width: 100%;
  padding: 8px;
  margin-top: 10px;
  color: white;
}

.modal-overlay button.confirm {
  background-color: $secondaryColor; // Green color for confirmation
  color: white;

  &:hover {
    background-color: $secondaryColorDark; // Darker green on hover
    scale: 0.9;
  }
}

.modal-overlay button.cancel {
  background-color: $secondaryColorLight; // Red color for cancel/destructive action
  color: white;

  &:hover {
    background-color: $secondaryColorHighlight; // Darker red on hover
    scale: 0.9;
  }
}

/* Slider container to position the slider and labels */
.slider-container {
  position: relative;
  width: 100%;
  margin: 0px 0;
}

/* Style the range input */
.range-slider {
  width: 100%;
  margin: 0;
  -webkit-appearance: none;
  /* Override default CSS styles */
  background: transparent;
  /* Remove default background */
}

/* Remove outline on focus */
.range-slider:focus {
  outline: none;
}

/* Slider track */
.range-slider::-webkit-slider-runnable-track {
  height: 0.75rem;
  background: #ddd;
  border-radius: 4px;
  position: relative;
}

/* Slider thumb */
.range-slider::-webkit-slider-thumb {
  -webkit-appearance: none;
  appearance: none;
  width: 20px;
  height: 20px;
  background: rgba($color: teal, $alpha: 1.0);
  cursor: pointer;
  border-radius: 50%;
  margin-top: -4px;
  /* Center the thumb on the track */
}

/* Add ticks to the slider track */
.range-slider::-webkit-slider-runnable-track {
  background: linear-gradient(to right,
      #ddd 0%, #ddd calc(25% - 1px),
      black 25%, black calc(25% + 1px),
      #ddd calc(25% + 1px), #ddd calc(50% - 1px),
      black 50%, black calc(50% + 1px),
      #ddd calc(50% + 1px), #ddd calc(75% - 1px),
      black 75%, black calc(75% + 1px),
      #ddd calc(75% + 1px), #ddd 100%);
}

/* Position the labels */
.slider-labels {
  display: flex;
  justify-content: space-between;
  margin-top: 1px;
  /* Adjust spacing as needed */
  margin-left: 10px;
}

.slider-label {
  text-align: center;
  font-size: 12px;
  width: fit-content;
  /* Adjust width to prevent text wrapping */
}

.quantity-input-container {
  color: white;
  display: flex;
  flex-direction: column;
  vertical-align: middle;
  justify-content: center;
  align-items: center;
  margin-bottom: 1em;
  /* Adjust spacing as needed */
}

.quantity-input-container label {
  margin-right: 0.5em;
  /* Space between label and input */
}

.quantity-input {
  background: rgba($color: $secondaryColor, $alpha: 0.5);
  border: 0.1rem solid black;
  width: 60px;
  /* Adjust width as needed */
  padding: 0px;
  font-size: 1em;
  text-align: center;
}